MONGODB_URI = mongodb+srv://jagwanrahul24:rahuljag@cluster0.nvj5g.mongodb.net
CLERK_PUBLISHABLE_KEY=pk_test_dG91Y2hlZC1jYXJkaW5hbC0yNi5jbGVyay5hY2NvdW50cy5kZXYk
CLERK_SECRET_KEY=sk_test_OOBMmd5Q7pVzh0J7wX5HkNaysQEDcWyM2WZv102RPg


 
INNGEST_EVENT_KEY = FB_SGkpVjc9jcgLrmwOLiGZoq2rv6_LzWjbB8sGNEHZd96ku21ouYsghl3Tj-CyDZnEWO_Wv5DhyrQ08XMXEnQ

INNGEST_SIGNING_KEY = signkey-prod-0adc5e80cc3d85bfda92d153a0f110e350191510195c5cb1279877a7cc24cdfc




TMDB_API_KEY = eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmYjBiMzJiMzgwNTIwYTFiMTZhOWMzMmNkYjg0NjRmOCIsIm5iZiI6MTc1MDUxMDgzNy4xOTEsInN1YiI6IjY4NTZhY2Y1ZGQ4MDk1OGUzMTQ5MmU2OSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.j_7lGGNde6cFx4061J002IGQNAk1_nrtyeMdjG9yc44

STRIPE_PUBLISHABLE_KEY = pk_test_51Pyb7HEetBCzaI22PpkuQYtBemx9Aoabz2RNZ94SyzaN5t3MhsRtrVOAuTu6ONj5GYuxPdfgFXHvdnd2BuoHpRVm00RXOTdm5U
STRIPE_SECRET_KEY = sk_test_51Pyb7HEetBCzaI22TpsmC4CW6V1iPeSWvNsv10qZm3ayAcHltoJh1D3ii1zm9mh6i2Ctta8rYuKkHbCe2kcpvMVu002EamXjyi
STRIPE_WEBHOOK_SECRET = whsec_wZPd0uvFLAKeQowpo8qhvoLzW2dOhDi4



#for backend login and signup we also used clerk

#for clerk: go to docs -> docs -> select express -> and do all the commands -> and then go to dashboard -> and click on webhooks -> and click on add endpoint 

##so we will not directly put the backend url in endpoint 
#we will use the INNGEST option to effecciently use teh webhooks

#so for INGEST -> go to ingest and sign in -> copy the event key and the signing key and paste in hte env file -> and then go to inngest home page and clikc on docs -> and the clikc on NODEJS -> and follow al the commands 
#install the ingest and then crate and ingest client and then create new file inside server.js and create ingest client in it 
#now go to clerk and click on inngest optino and click on connect to inngest
#and you will get one url and go dowon cand click on 
# now go to testing and choose on event typoe suppose choose USER CREATED event yoiu will get all the data to this event that you have to store in mongo db and can use other events like USER DELETED OR USER UPDATED


#we had created varioius events of user . now push the code into the github to deploy server on the vercel
#after deployment of backemd on vercel now we have to sync out inngest porject

#go to inngest on left bar lcikck APPS -> click on sync new app -> provide bacekend url got from vercel in it and also add /api/inngest in the url as we had created it

#now if yoiu delete the user form website i.e form clerk and then check in the INNGEST -> RUNS there will be visible the DELETED USER EVEnt performed



#tmdb password: movix
#postman password: postman1122@



# after creating all the models and controllers and routes of backend its time to integreate the backend with the frontend
# 1. add base url of backend in frontend env
# 2. to make the backend api call we will make the use of AXIOS 
# 3. in frontend we will make the use of CONTEXT API to store the global states
# in AppContext file 1st create using CREATECONTEXT -> then use the CONTEXTPROVIDER -> and then pass the value in that provider -> and then to use it make the use of USECONTEXT -> now to make the support for contextprovider in whole app add it in main.jsx -> now create some states and function in APPCONTEXT FILE

# for payemtn we will use STRIPE 
# and for managing web hooks of stripe payments we will use SVIX


# for verifying the payments succedded or not we wil use web hooks therefore got to stripe dashboard -> developers -> webhooks -> add destination -> select payment intent -> inside it tick the payment succedded -> contiue -> new -> put the backend url(deployed on vercel) and add it that url at last : /api/stripe -> create destination -> copy the signing secret key and paste in env in stripe webhool  -> create stripeWebhooks.js controller file in controller